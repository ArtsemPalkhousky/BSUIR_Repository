EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
Lab82.com -- emu8086 assembler version: 4.05  
 
[ 16.06.2021  --  12:31:08 ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       .model tiny                ;
[   2]    0100:                                       .code
[   3]        :                                       org 100h               ; ?????? PSP
[   4]        :                                       ;
[   5]    0100:                                       start:                     ;
[   6]    0100: E9 E5 03                              	jmp main               ;
[   7]        :                                       ;
[   8]        :                                       
[   9]        :                                       maxCMDSize equ 127
[  10]        :                                       maxBuffSize equ 25
[  11]    0103: 00                                    cmd_size              db  ?
[  12]    0104: 00 00 00 00 00 00 00 00 00 00 00 00   cmd_text              db  maxCMDSize + 2 dup(0)
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00          
[  13]    0185: 00 00 00 00 00 00 00 00 00 00 00 00   buffer                db  maxBuffSize + 2 dup(0)
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00                            
[  14]    01A0: 00 00 00 00 00 00 00 00 00 00 00 00   sourcePath            db  maxCMDSize + 2 dup(0)
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00          
[  15]    0221: 00 00                                 sourceID              dw  0
[  16]    0223: 19 00                                 interval              dw  maxBuffSize
[  17]        :                                       
[  18]    0225: 00 00                                 fileOffset dw 0
[  19]    0227: 00 00                                 amount dw 0
[  20]        :                                       
[  21]        :                                       spaceSymbol           equ ' '
[  22]        :                                       newLineSymbol         equ 0Dh
[  23]        :                                       returnSymbol          equ 0Ah
[  24]        :                                       endl                  equ 0
[  25]        :                                       
[  26]    0229: 43 61 6E 6E 6F 74 20 6F 70 65 6E 20   badSourceText         db  "Cannot open source file",                                                                '$'
                73 6F 75 72 63 65 20 66 69 6C 65 24 
                                                    
[  27]    0241: 46 69 6C 65 20 69 73 20 6E 6F 74 20   fileNotFoundText      db  "File is not found",                                                                      '$'
                66 6F 75 6E 64 24                   
[  28]    0253: 42 61 64 20 63 6F 6D 6D 61 6E 64 2D   badCMDArgsMessage db "Bad command-line arguments! Only one argument is required", '$'
                6C 69 6E 65 20 61 72 67 75 6D 65 6E 
                74 73 21 20 4F 6E 6C 79 20 6F 6E 65 
                20 61 72 67 75 6D 65 6E 74 20 69 73 
                20 72 65 71 75 69 72 65 64 24       
[  29]    028D: 54 68 65 20 62 65 67 69 6E 69 6E 67   startText db "The begining of the program", '$'
                20 6F 66 20 74 68 65 20 70 72 6F 67 
                72 61 6D 24                         
[  30]        :                                       ;
[  31]    02A9: 00 00 00 00                           intOldHandler dd 0                    ;
[  32]        :                                       
[  33]        :                                       ;**************************************************************************************************************************
[  34]    02AD:                                       handler PROC                          ; ????? ?????????? ??????????
[  35]    02AD: 9C                                    	pushf
[  36]    02AE: 2E FF 16 A9 02                        	call    cs:intOldHandler                           ;
[  37]    02B3: 1E                                    	push ds                           ;
[  38]    02B4: 06                                    push es                           ;
[  39]    02B5: 50                                    	push ax                           ;
[  40]    02B6: 53                                    	push bx                           ; ????????? ????????
[  41]    02B7: 51                                    push cx                           ;
[  42]    02B8: 52                                    push dx                           ;
[  43]    02B9: 57                                    	push di                           ;
[  44]        :                                       ;
[  45]    02BA: 0E                                    	push cs                           ;
[  46]    02BB: 1F                                    	pop ds                            ;
[  47]        :                                       ;
[  48]    02BC: E4 60                                 in  al, 60H
[  49]    02BE: 3C 39                                 cmp al, 39h                       ; space scan code
[  50]    02C0: 75 03 E9 87 00                        je escRoutine
[  51]    02C5: 3C 48                                 cmp al, 48h                       ; up scan code
[  52]    02C7: 74 10                                 je upRoutine
[  53]    02C9: 3C 50                                 cmp al, 50h                       ; down scan code
[  54]    02CB: 74 2B                                 je downRoutine
[  55]        :                                       
[  56]    02CD: 5F                                    pop     di                       ; ?????????????? ?????????????? ?????????
[  57]    02CE: 5A                                    pop     dx
[  58]    02CF: 59                                    pop     cx
[  59]    02D0: 5B                                    pop     bx
[  60]    02D1: 58                                    pop     ax
[  61]    02D2: 07                                    pop     es
[  62]    02D3: 1F                                    pop     ds
[  63]    02D4: 2E FF 2E A9 02                        jmp dword ptr cs:intOldHandler   ;?? ?????? ??????
[  64]        :                                       
[  65]    02D9:                                       upRoutine:
[  66]    02D9: B4 3F                                 mov ah, 3Fh                     ; ????????? ? ah ??? 3Fh - ??? ?-??? ?????? ?? ?????
[  67]    02DB: 8B 1E 21 02                           	mov bx, sourceID                ; ? bx ????????? ID ?????, ?? ???????? ?????????? ?????????
[  68]    02DF: B9 19 00                              	mov cx, maxBuffSize             ; ? cx ????????? ???????????? ?????? ?????, ?.?. ????????? ???????????? ???-?? ???????? (maxWordSize ????????)
[  69]    02E2: BA 85 01                              	lea dx, buffer                  ; ? dx ????????? ???????? ???????, ? ??????? ????? ????????? ?????? ?? ?????
[  70]    02E5: CD 21                                 	int 21h                         ; ???????? ?????????? ??? ?????????? ?-???
[  71]        :                                       	
[  72]    02E7: 3D 00 00                              	cmp ax, 0
[  73]    02EA: 76 49                                 	jbe endHandler
[  74]        :                                       
[  75]    02EC: E8 9B 00                              call printToVM
[  76]        :                                       
[  77]    02EF: 03 06 25 02                           add ax, fileOffset
[  78]    02F3: A3 25 02                              mov fileOffset, ax
[  79]    02F6: EB 3D                                 jmp endHandler
[  80]        :                                       
[  81]    02F8:                                       downRoutine:
[  82]    02F8: A1 25 02                              mov ax, fileOffset
[  83]    02FB: 2D 19 00                              sub ax, maxBuffSize
[  84]        :                                       
[  85]    02FE: 3D 00 00                              cmp ax, 0
[  86]    0301: 77 06                                 ja skip
[  87]        :                                       
[  88]    0303: B8 00 00                              mov ax, 0
[  89]    0306: A3 25 02                              mov fileOffset, ax
[  90]    0309:                                       skip:
[  91]    0309: B0 00                                 mov al, 0                ;
[  92]    030B: B4 42                                 	mov ah, 42h              ; ?????????? ? ah ??? 42h - ?-??? DOS ????????? ????????? ?????
[  93]    030D: B9 00 00                              	mov cx, 0
[  94]    0310: 8B 16 25 02                           	mov dx, fileOffset		
[  95]    0314: CD 21                                 	int 21h                  ; ???????? ?????????? DOS ??? ?????????? ????????
[  96]        :                                       
[  97]        :                                       	
[  98]    0316: B4 3F                                 mov ah, 3Fh                     ; ????????? ? ah ??? 3Fh - ??? ?-??? ?????? ?? ?????
[  99]    0318: 8B 1E 21 02                           	mov bx, sourceID                ; ? bx ????????? ID ?????, ?? ???????? ?????????? ?????????
[ 100]    031C: B9 19 00                              	mov cx, maxBuffSize             ; ? cx ????????? ???????????? ?????? ?????, ?.?. ????????? ???????????? ???-?? ???????? (maxWordSize ????????)
[ 101]    031F: BA 85 01                              	lea dx, buffer                  ; ? dx ????????? ???????? ???????, ? ??????? ????? ????????? ?????? ?? ?????
[ 102]    0322: CD 21                                 	int 21h                         ; ???????? ?????????? ??? ?????????? ?-???
[ 103]        :                                       	
[ 104]    0324: 3D 00 00                              	cmp ax, 0
[ 105]    0327: 76 0C                                 	jbe endHandler
[ 106]        :                                       
[ 107]    0329: E8 5E 00                              call printToVM
[ 108]        :                                       
[ 109]    032C: 03 06 25 02                           add ax, fileOffset
[ 110]    0330: A3 25 02                              mov fileOffset, ax
[ 111]    0333: EB 00                                 jmp endHandler
[ 112]        :                                       
[ 113]    0335:                                       endHandler:
[ 114]    0335: E4 61                                 in al,61h ;?????? ?????????? ????? ?
[ 115]    0337: 0C 80                                 or al,80h ;?????????? ????? ????, ???????
[ 116]    0339: E6 61                                 out 61h,al ;??? 80h ? ??????????? ????? ?
[ 117]    033B: 24 7F                                 and al,7Fh ;????? ???????? ?????? ??????????.
[ 118]    033D: E6 61                                 out 61h,al ;??????? ? ????? ? ??? 80h .
[ 119]        :                                       ;
[ 120]    033F: B0 20                                 mov al, 20h                       ;
[ 121]    0341: E6 20                                 out 20h, al                       ;
[ 122]        :                                       
[ 123]    0343: 5F                                    	pop di                            ;
[ 124]    0344: 5A                                    	pop dx                            ;
[ 125]    0345: 59                                    	pop cx                            ;
[ 126]    0346: 5B                                    	pop bx                            ; ??????????????? ????????
[ 127]    0347: 58                                    	pop ax                            ;
[ 128]    0348: 07                                    	pop es                            ;
[ 129]    0349: 1F                                    	pop ds	
[ 130]    034A: EB 3D                                 	jmp intEnd
[ 131]        :                                       
[ 132]    034C:                                       escRoutine:
[ 133]        :                                       ;??????????????? ?????? 09h
[ 134]        :                                       	
[ 135]    034C: B4 3E                                 	mov ah, 3Eh                 ; ????????? ? ah ??? 3Eh - ??? ???????? ?????
[ 136]    034E: 8B 1E 21 02                           mov bx, sourceID            ; ? bx ????????? ID ?????, ??????????? ????????
[ 137]    0352: CD 21                                 	int 21h                     ; ???????? ?????????? ??? ??????????
[ 138]        :                                       	
[ 139]    0354: E4 61                                 	in al,61h ;?????? ?????????? ????? ?
[ 140]    0356: 0C 80                                 or al,80h ;?????????? ????? ????, ???????
[ 141]    0358: E6 61                                 out 61h,al ;??? 80h ? ??????????? ????? ?
[ 142]    035A: 24 7F                                 and al,7Fh ;????? ???????? ?????? ??????????.
[ 143]    035C: E6 61                                 out 61h,al ;??????? ? ????? ? ??? 80h .
[ 144]        :                                       ;
[ 145]    035E: B0 20                                 mov al, 20h                       ;
[ 146]    0360: E6 20                                 out 20h, al                       ;
[ 147]        :                                       
[ 148]    0362: 5F                                    	pop di                            ;
[ 149]    0363: 5A                                    	pop dx                            ;
[ 150]    0364: 59                                    	pop cx                            ;
[ 151]    0365: 5B                                    	pop bx                            ; ??????????????? ????????
[ 152]    0366: 58                                    	pop ax                            ;
[ 153]    0367: 07                                    	pop es                            ;
[ 154]    0368: 1F                                    	pop ds	
[ 155]        :                                       	
[ 156]    0369: B8 09 25                              mov ax,2509h
[ 157]    036C: 2E 8B 16 A9 02                        mov dx,word ptr cs:[intOldHandler]
[ 158]    0371: 2E 8E 1E AB 02                        mov ds,word ptr cs:[intOldHandler+2]
[ 159]    0376: CD 21                                 int 21h
[ 160]        :                                       
[ 161]    0378: 2E 8E 06 2C 00                        mov es,cs:2ch ; ??????? ?? PSP ????? ????????????
[ 162]    037D: B4 49                                 mov ah,49h ; ????????? ????????? ? ???????? ???
[ 163]    037F: CD 21                                 int 21h ;
[ 164]        :                                       
[ 165]    0381: 0E                                    push cs ; ???????? ?????? ???? ?????????
[ 166]    0382: 07                                    pop es ;
[ 167]    0383: B4 49                                 mov ah,49h ;
[ 168]    0385: CD 21                                 int 21h ;
[ 169]        :                                       
[ 170]    0387: EB 00                                 jmp intEnd
[ 171]        :                                       
[ 172]    0389:                                       intEnd:
[ 173]    0389: CF                                    	iret                              ;
[ 174]        :                                       ENDP                                  ;
[ 175]        :                                       ;**************************************************************************************************************************
[ 176]        :                                       
[ 177]        :                                       
[ 178]        :                                       ;**************************************************************************************************************************
[ 179]        :                                       ;ax -- ????? ????????? ??? ?????? ?? ?????
[ 180]    038A:                                       printToVM proc
[ 181]    038A: 50                                    push ax
[ 182]    038B: 53                                    push bx
[ 183]    038C: 51                                    push cx
[ 184]    038D: 52                                    push dx
[ 185]    038E: 56                                    push si
[ 186]    038F: 57                                    push di
[ 187]    0390: 50                                    push ax
[ 188]        :                                       
[ 189]        :                                       
[ 190]    0391: B8 00 B8                              mov ax, 0b800h
[ 191]    0394: 8E C0                                 mov es, ax
[ 192]    0396: BE 85 01                              lea si, buffer
[ 193]        :                                       ;mov di, 0
[ 194]        :                                       
[ 195]        :                                       ;mov cx, maxBuffSize
[ 196]        :                                       ;xor ax, ax
[ 197]        :                                       ;rep stosw
[ 198]        :                                       
[ 199]    0399: BF 00 00                              mov di, 0
[ 200]        :                                       
[ 201]    039C: 59                                    pop cx
[ 202]    039D:                                       loop2:
[ 203]    039D: 8A 04                                 mov al, [si]
[ 204]    039F: 26 88 05                              mov es:[di], al
[ 205]    03A2: 46                                    inc si
[ 206]    03A3: 83 C7 02                              add di, 2
[ 207]    03A6: E2 F5                                 loop loop2
[ 208]        :                                       
[ 209]    03A8: 5F                                    pop di
[ 210]    03A9: 5E                                    pop si
[ 211]    03AA: 5A                                    pop dx
[ 212]    03AB: 59                                    pop cx
[ 213]    03AC: 5B                                    pop bx
[ 214]    03AD: 58                                    pop ax
[ 215]    03AE: C3                                    ret
[ 216]        :                                       endp
[ 217]        :                                       ;**************************************************************************************************************************
[ 218]    03AF:                                       programLength:
[ 219]        :                                       
[ 220]        :                                       ;**************************************************************************************************************************
[ 221]        :                                       println MACRO info          ;
[ 222]        :                                       	push ax                 ;
[ 223]        :                                       	push dx                 ;
[ 224]        :                                       ;
[ 225]        :                                       	mov ah, 09h             ; ??????? ??????
[ 226]        :                                       	lea dx, info            ; ???????? ? dx ???????? ?????????? ?????????
[ 227]        :                                       	int 21h                 ; ????? ??????????? ??? ?????????? ??????
[ 228]        :                                       	                        ;
[ 229]        :                                       	 mov dl, 0Ah            ; ?????? ???????? ?? ????? ??????
[ 230]        :                                       	mov ah, 02h             ; ??????? ?????? ???????
[ 231]        :                                       	int 21h                 ; ????? ??????????
[ 232]        :                                       ;
[ 233]        :                                       	mov dl, 0Dh             ; ?????? ???????? ? ?????? ??????
[ 234]        :                                       	mov ah, 02h             ;
[ 235]        :                                       	int 21h                 ;            ==//==
[ 236]        :                                       ;
[ 237]        :                                       	pop dx                  ;
[ 238]        :                                       	pop ax                  ;
[ 239]        :                                       ENDM
[ 240]        :                                       ;**************************************************************************************************************************
[ 241]        :                                       
[ 242]        :                                       ;**************************************************************************************************************************
[ 243]        :                                       ;????????? ? ax - 0 ???? ??? ??????
[ 244]    03AF:                                       openFile PROC                  ;
[ 245]    03AF: 53                                    	push bx                     ;
[ 246]    03B0: 52                                    	push dx                     ; ????????? ???????? ?????????
[ 247]    03B1: 56                                    	push si
[ 248]        :                                       	
[ 249]    03B2: BE A0 01                              	lea si, sourcePath
[ 250]    03B5: E8 83 00                              	call    strlen
[ 251]        :                                       	
[ 252]    03B8: 33 F6                                 	xor si, si
[ 253]    03BA: 8B F0                                 	mov si, ax
[ 254]    03BC: 83 EE 01                              	sub si, 1
[ 255]        :                                       	
[ 256]    03BF: 80 BC A0 01 74                        	cmp sourcePath[si], 't'
[ 257]    03C4: 75 20                                 	jne checkTxt_Error
[ 258]        :                                       	
[ 259]    03C6: 83 EE 01                              	sub si, 1
[ 260]        :                                       	
[ 261]    03C9: 80 BC A0 01 78                        	cmp sourcePath[si], 'x'
[ 262]    03CE: 75 16                                 	jne checkTxt_Error
[ 263]        :                                       	
[ 264]    03D0: 83 EE 01                              	sub si, 1
[ 265]        :                                       	
[ 266]    03D3: 80 BC A0 01 74                        	cmp sourcePath[si], 't'
[ 267]    03D8: 75 0C                                 	jne checkTxt_Error
[ 268]        :                                       	
[ 269]    03DA: 83 EE 01                              	sub si, 1
[ 270]        :                                       	
[ 271]    03DD: 80 BC A0 01 2E                        	cmp sourcePath[si], '.'
[ 272]    03E2: 75 02                                 	jne checkTxt_Error
[ 273]        :                                       	
[ 274]    03E4: EB 03                                 	jmp checkTxt_OK
[ 275]    03E6:                                       	checkTxt_Error:
[ 276]    03E6: 5E                                    	pop si
[ 277]    03E7: EB 17                                 	jmp badOpenSource
[ 278]        :                                       	
[ 279]    03E9:                                       	checkTxt_OK:
[ 280]    03E9: 5E                                    	pop si
[ 281]        :                                       	
[ 282]        :                                       	;;;;;;;
[ 283]        :                                       ;
[ 284]    03EA: B4 3D                                 	mov ah, 3Dh			        ; ??????? 3Dh - ??????? ???????????? ????
[ 285]    03EC: B0 02                                 	mov al, 02h			        ; ????? ???????? ?????
[ 286]    03EE: BA A0 01                              	lea dx, sourcePath          ; ????????? ? dx ???????? ????????? ?????
[ 287]    03F1: B9 00 00                              	mov cx, 00h			        ;
[ 288]    03F4: CD 21                                 	int 21h                     ;
[ 289]        :                                       ;
[ 290]    03F6: 72 08                                 	jb badOpenSource	        ; ???? ???? ?? ????????, ?? ??????? ? badOpenSource
[ 291]        :                                       ;
[ 292]    03F8: A3 21 02                              	mov sourceID, ax	        ; ????????? ? sourceId ???????? ?? ax, ?????????? ??? ???????? ?????
[ 293]        :                                       ;
[ 294]    03FB: B8 00 00                              	mov ax, 0			        ; ????????? ? ax 0, ?.?. ?????? ?? ????? ?????????? ????????? ?? ????????
[ 295]    03FE: EB 38                                 	jmp endOpenProc		        ; ??????? ? endOpenProc ? ????????? ??????? ?? ?????????
[ 296]        :                                       ;
[ 297]    0400:                                       badOpenSource:                  ;
[ 298]    0400: 50 52 B4 09 BA 29 02 CD 21 B2 0A B4   	println badSourceText       ; ??????? ?????????????? ?????????
                02 CD 21 B2 0D B4 02 CD 21 5A 58    
[ 299]    0417: 3D 02 00                              	cmp ax, 02h                 ; ?????????? ax ? 02h
[ 300]    041A: 75 19                                 	jne errorFound              ; ???? ax != 02h - ???? ??????, ??????? ? errorFound
[ 301]        :                                       ;
[ 302]    041C: 50 52 B4 09 BA 41 02 CD 21 B2 0A B4   	println fileNotFoundText    ; ??????? ????????? ? ???, ??? ???? ?? ??????
                02 CD 21 B2 0D B4 02 CD 21 5A 58    
[ 303]        :                                       ;
[ 304]    0433: EB 00                                 	jmp errorFound              ; ??????? ? errorFound
[ 305]        :                                       ;       ;       ==//==                               ;
[ 306]    0435:                                       errorFound:                     ;
[ 307]    0435: B8 01 00                              	mov ax, 1                   ; ????????? ? ax 1, ?.?. ????????? ??????
[ 308]    0438:                                       endOpenProc:                    ;
[ 309]    0438: 5A                                    	pop dx                      ;
[ 310]    0439: 5B                                    	pop bx                      ; ??????????????? ???????? ????????? ? ??????? ?? ?????????
[ 311]    043A: C3                                    	ret                         ;
[ 312]        :                                       ENDP                            ;
[ 313]        :                                       ;******************************************************************************************************************************
[ 314]        :                                       
[ 315]        :                                       ;*************************************************************************************************************************
[ 316]        :                                       ;ds:si - ????????, ? ??????? ????????? ?????? ??????
[ 317]        :                                       ;????????? - ? ax ?????????? ????? ??????
[ 318]    043B:                                       strlen PROC                     ;
[ 319]    043B: 53                                    	push bx                     ;
[ 320]    043C: 56                                    	push si                     ;  ????????? ???????????? ????? ????????
[ 321]        :                                       	                            ;
[ 322]    043D: 33 C0                                 	xor ax, ax                  ;  ???????? ax
[ 323]        :                                       ;
[ 324]    043F:                                       startCalc:                  ;
[ 325]    043F: 3E 8A 1C                              	    mov bl, ds:[si]         ;  ????????? ????????? ?????? ?????? ?? ds ?? ????????? si
[ 326]    0442: 80 FB 00                              	    cmp bl, endl            ;  ?????????? ???? ?????? ? ???????? ????? ??????
[ 327]    0445: 74 04                                 	    je endCalc              ;  ???? ??? ?????? ????? ?????? - ??????? ? endCalc ? ??????????? ??????????
[ 328]        :                                       ;
[ 329]    0447: 46                                    	    inc si                  ;  ??????????? si, ?.?. ????????? ? ?????????? ???????
[ 330]    0448: 40                                    	    inc ax                  ;  ??????????? ax, ?.?. ????? ??????
[ 331]    0449: EB F4                                 	    jmp startCalc           ;  ??????????
[ 332]        :                                       	                            ;
[ 333]    044B:                                       endCalc:                    ;
[ 334]    044B: 5E                                    	pop si                      ;
[ 335]    044C: 5B                                    	pop bx                      ;  ??????????????? ????????
[ 336]    044D: C3                                    	ret                         ;
[ 337]        :                                       ENDP                            ;
[ 338]        :                                       ;*************************************************************************************************************************
[ 339]        :                                       
[ 340]        :                                       ;********************************************************************************************************************
[ 341]    044E:                                       parseCMD PROC                         ;
[ 342]    044E: 53                                    	push bx                           ;
[ 343]    044F: 51                                    	push cx                           ;
[ 344]    0450: 52                                    	push dx                           ; ????????? ???????? ?????????
[ 345]    0451: 56                                    	push si                           ;
[ 346]    0452: 57                                    	push di                           ;
[ 347]        :                                       ;
[ 348]    0453: FC                                    	cld                               ;
[ 349]    0454: BB 80 00                              	mov bx, 80h                       ;
[ 350]    0457: 2E 8A 0F                              	mov cl, cs:[bx]                   ; ????????? ? ????????, ??? ?????????? ????? ????????? ??????
[ 351]    045A: 32 ED                                 	xor ch, ch                        ; ? cl ????????? ????? ????????? ??????
[ 352]        :                                       ;
[ 353]    045C: 33 D2                                 	xor dx, dx                        ;
[ 354]    045E: BF 81 00                              	mov di, 81h                       ;
[ 355]        :                                       ;
[ 356]    0461: B0 20                                 	mov al, ' '                       ; ?????????? ??? ???????
[ 357]    0463: F2 AE                                 	repne scasb	                      ; ????? ????, ?? ?????? al ? ????? ?? cx ???? ?? ?????? es:di
[ 358]        :                                       	
[ 359]    0465: B0 20                                 	mov al, ' '
[ 360]    0467: F3 AE                                 repe scasb
[ 361]    0469: 4F                                    dec di
[ 362]    046A: 41                                    inc cx
[ 363]        :                                       	
[ 364]    046B: 33 C0                                 	xor ax, ax                        ;
[ 365]        :                                       ;
[ 366]    046D: 8B F7                                 	mov si, di                        ; ????????? ? si ????????, ? ???????? ?????????? ?????????
[ 367]    046F: BF A0 01                              	mov di, offset sourcePath          ; ???????? ??????? ? sourcePath
[ 368]        :                                       	
[ 369]    0472: 8A 04                                 	mov al, [si]
[ 370]    0474: 3C 20                                 	cmp al, ' '
[ 371]    0476: 74 14                                 je badCMDArgs
[ 372]    0478: 3C 0D                                 cmp al, 0Dh
[ 373]    047A: 74 10                                 je badCMDArgs
[ 374]        :                                       	
[ 375]    047C:                                       loop1:
[ 376]    047C: 8A 04                                 mov al, [si]
[ 377]    047E: 3C 20                                 cmp al, ' '
[ 378]    0480: 74 25                                 je endFound
[ 379]    0482: 3C 0D                                 cmp al, 0Dh
[ 380]    0484: 74 21                                 je endFound
[ 381]        :                                       
[ 382]    0486: 88 05                                 mov [di], al
[ 383]    0488: 47                                    inc di
[ 384]    0489: 46                                    inc si
[ 385]    048A: EB F0                                 jmp loop1
[ 386]        :                                       
[ 387]    048C:                                       badCMDArgs:
[ 388]    048C: 50 52 B4 09 BA 53 02 CD 21 B2 0A B4   println badCMDArgsMessage
                02 CD 21 B2 0D B4 02 CD 21 5A 58    
[ 389]    04A3: 33 C0                                 xor ax, ax
[ 390]    04A5: EB 07                                 jmp endParse
[ 391]        :                                       
[ 392]    04A7:                                       endFound:
[ 393]    04A7: B0 00                                 mov al, endl
[ 394]    04A9: 88 05                                 mov [di], al                ; ????????? ?????? ????? ?????? ? ?????????????? ??????
[ 395]    04AB: B8 00 00                              mov ax, 0
[ 396]        :                                       
[ 397]    04AE:                                       endParse:                       ;
[ 398]    04AE: 5F                                    	pop di
[ 399]    04AF: 5E                                    	pop si
[ 400]    04B0: 5A                                    	pop dx                      ; ??????????????? ????????
[ 401]    04B1: 59                                    	pop cx                      ;
[ 402]    04B2: 5B                                    	pop bx                      ;
[ 403]    04B3: C3                                    	ret                         ;
[ 404]        :                                       endp
[ 405]        :                                       ;********************************************************************************************************************   	
[ 406]        :                                       	
[ 407]        :                                       	
[ 408]        :                                       ;
[ 409]        :                                       ;********************************************************************************************************************
[ 410]    04B4:                                       setHandler PROC                       ; ????????? ?????? ??????????? ??????????. ????????? ax=0 ???? ??? ??????, ????? ax!=0
[ 411]    04B4: 53                                    	push bx                           ;
[ 412]    04B5: 52                                    	push dx                           ; ????????? ???????? ?????????
[ 413]        :                                       ;
[ 414]    04B6: FA                                    	cli                               ; ????????? ?????????? (??????/?????????? ?????????? ??? ?????????? ????????? ?????? ??????????? )
[ 415]        :                                       ;
[ 416]    04B7: B4 35                                 	mov ah, 35h                       ; ??????? ????????? ?????? ??????????? ??????????
[ 417]    04B9: B0 09                                 	mov al, 09h                       ; ??????????, ?????????? ???????? ?????????? ???????? (09h - ?????????? ??????????)
[ 418]    04BB: CD 21                                 	int 21h                           ; ???????? ?????????? ??? ????????? ???????
[ 419]        :                                       ; ? ?????????? ?????????? ??????? ? es:bx ?????????? ????? ???????? ??????????? ??????????
[ 420]        :                                       ;
[ 421]        :                                       	                                  ; ????????? ?????? ??????????
[ 422]    04BD: 89 1E 00 00                           	mov word ptr [offset intOldHandler], bx     ; ????????
[ 423]    04C1: 8C 06 00 00                           	mov word ptr [offset intOldHandler + 2], es ; ???????
[ 424]        :                                       ;
[ 425]    04C5: 1E                                    	push ds			                  ; ????????? ???????? ds
[ 426]    04C6: 07                                    	pop es                            ; ??????????????? ???????? es
[ 427]        :                                       ;
[ 428]    04C7: B4 25                                 	mov ah, 25h                       ; ??????? ?????? ??????????? ??????????
[ 429]    04C9: B0 09                                 	mov al, 09h                       ; ??????????, ????????? ???????? ????? ???????
[ 430]    04CB: BA AD 02                              	mov dx, offset handler            ; ????????? ? dx ???????? ?????? ??????????? ??????????, ??????? ????? ?????????? ?? ????? ??????? ???????????
[ 431]    04CE: CD 21                                 	int 21h                           ; ???????? ?????????? ??? ?????????? ???????
[ 432]        :                                       ;
[ 433]    04D0: FB                                    	sti                               ; ????????? ??????????
[ 434]        :                                       ;
[ 435]    04D1: B8 00 00                              	mov ax, 0                         ; ????????? ? ax - 0, ?.?. ?????? ?? ?????????
[ 436]        :                                       ;
[ 437]    04D4: 5A                                    	pop dx                            ; ??????????????? ???????? ????????? ? ????????? ??????? ?? ?????????
[ 438]    04D5: 5B                                    	pop bx                            ;
[ 439]    04D6: C3                                    	ret                               ;
[ 440]        :                                       ENDP                                  ;
[ 441]        :                                       ;
[ 442]    04D7:                                       newline PROC                          ;
[ 443]    04D7: 50                                    	push ax                           ; ????????? ???????? ?????????
[ 444]    04D8: 52                                    	push dx                           ;
[ 445]        :                                       ;
[ 446]    04D9: B2 0A                                 	mov dl, 10                        ;	????????? ? dx ??????????????? ???? ???????? ??????? 0Ah(10) ? 0Dh(13) ??? ???????? ?? ????? ??????
[ 447]    04DB: B4 02                                 	mov ah, 02h                       ; ????????? ? ax ??? 02h - ??? ???????? ?????? ???????
[ 448]    04DD: CD 21                                 	int 21h                           ; ???????? ?????????? ??? ?????? ???????
[ 449]        :                                       ;
[ 450]    04DF: B2 0D                                 	mov dl, 13                        ;
[ 451]    04E1: B4 02                                 	mov ah, 02h                       ; ==//==
[ 452]    04E3: CD 21                                 	int 21h                           ;
[ 453]        :                                       ;
[ 454]    04E5: 5A                                    	pop dx                            ; ??????????????? ??????? ?????????
[ 455]    04E6: 58                                    	pop ax                            ;
[ 456]    04E7: C3                                    	ret                               ;
[ 457]        :                                       ENDP                                  ;
[ 458]        :                                       
[ 459]    04E8:                                       main:
[ 460]    04E8: E8 63 FF                              	call parseCMD                     ; ?????? ????????? ??????
[ 461]    04EB: 3D 00 00                              	cmp ax, 0                         ; ???? ???????? ?????? - ???????
[ 462]    04EE: 75 19                                 	jne endMain                       ;
[ 463]        :                                       
[ 464]    04F0: E8 BC FE                              call openFile          ; ???????? ?????????, ??????? ????????? ??? ????? ??? ??????/??????
[ 465]    04F3: 3D 00 00                              	cmp ax, 0               ;
[ 466]    04F6: 75 11                                 	jne endMain				;  ==//==
[ 467]        :                                       ;
[ 468]    04F8: E8 B9 FF                              	call setHandler                   ; ????????????? ????? ?????????? ??????????
[ 469]    04FB: 3D 00 00                              	cmp ax, 0                         ; ???? ???????? ?????? - ???????
[ 470]    04FE: 75 09                                 	jne endMain				          ;
[ 471]        :                                       ;
[ 472]    0500: B4 31                                 	mov ah, 31h                       ; ????????? ????????? ???????????
[ 473]    0502: B0 00                                 	mov al, 0                         ;
[ 474]        :                                       	                                  ;
[ 475]    0504: BA 3C 00                              	mov dx, (programLength - start + 10Fh) / 16 + 1 ; ??????? ? dx ?????? ????????? + PSP,
[ 476]        :                                       	                                  ; ????? ??  16, ?.?. ? dx ?????????? ??????? ?????? ? 16 ??????? ??????????
[ 477]    0507: CD 21                                 	int 21h                           ;
[ 478]        :                                       ;
[ 479]    0509:                                       endMain:                              ;
[ 480]    0509: C3                                    	ret                               ;                               ;
[ 481]        :                                       end start                             ;
[ 482]        :                                       
 
===================================================================================================
 




===================================================================================================
