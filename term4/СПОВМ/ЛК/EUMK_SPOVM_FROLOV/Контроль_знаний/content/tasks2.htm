<!-- (C) 2011-2012 V.Prytkov, V. Suponev, A.Uvarov. BSUIR -->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1251">
<META HTTP-EQUIV="Content-Language" CONTENT="ru">
<link rel="stylesheet" type="text/css" href="../css/style.css" />
<title>Задачи</title>
</head>

<body>
  <p align="center"><b>Задачи</b></p> 
  <p>1. Поездом называется произвольная последовательность  локомотивов и вагонов, начиная с локомотива. Построить грамматику для понятия  поезд, считая что понятия &lt;локомотив&gt; и &lt;вагон&gt; являются  терминалами.<br />
2. Построить грамматику, допускающую только те цепочки,  которые оканчиваются на aabba.<br />
3. Построить грамматику, допускающую только те цепочки, в  которых встречается последовательность символов aabba.<br />
4. Построить грамматику, допускающую только те цепочки, в  которых за каждым символом a непосредственно следует b.<br />
5. Построить грамматику над алфавитом {a,b,c},  допускающую только те цепочки, в которых за каждым символом a где-нибудь после обязательно следует b.<br />
6. Язык состоит из одного или более предложения, которые  начинаются с заглавной буквы и оканчиваются точкой. Предложения разделяются  пробелами. Предложение состоит из слов, слова разделяются пробелами.  Предложение обязательно содержит прямую речь в виде <strong>&hellip;..:&rdquo;&hellip;..&rdquo;. </strong>Прямая речь начинается с заглавной буквы. Больше в  предложении нигде заглавных букв не допускается. Могут встречаться лишние  пробелы перед или после знаков препинания, могут встречаться слова из одного  символа, в том числе заглавного, где это необходимо. Построить регулярную  автоматную грамматику, описывающую заданный язык.<br />
7. Язык состоит из одного или более предложений, которые  оканчиваются точкой. Предложения могут и не разделяться пробелом. Предложение состоит  из слов, слова разделяются пробелом. Язык является благозвучным &ndash; он&nbsp; не должен содержать 3 подряд идущих согласных  либо гласных, в том числе из разных слов либо предложений. Допускается  несколько подряд идущих точек или предложений. Построить регулярную автоматную  грамматику, описывающую заданный язык.<br />
8. Язык состоит из одного или больше предложений, которые  начинаются с заглавной буквы и оканчиваются точкой. Предложения могут и не  разделяться пробелом. Предложения состоят из слов, слова разделяются пробелом.  Язык допускает имена собственные &ndash; т.е. произвольное слово может начинаться с  заглавной буквы. Язык допускает аббревиатуры &ndash; то есть слова, полностью  состоящие из заглавных букв. Построить регулярную автоматную грамматику,  описывающую заданный язык.<br />
9. Для грамматики ({A, P, B,C,D,E,F}, {. , &ldquo; , _ , a, z, :}, P, A), где правила имеют вид:<br />
{A&#8594;P. ; P&#8594;B&rdquo; ; B&#8594;B_ | Ba | Cz ; C&#8594;D&rdquo; ; D&#8594;E: ; E&#8594;E_ | Ea | Fz | z ; F&#8594;A_} построить регулярное  выражение на основе решения уравнения с регулярными коэффициентами.<br />
10. Для грамматики ({A, B, X, Y, Z, Q}, {s , g, _ , .}, P, B), где правила имеют вид:<br />
{B&#8594;A. ; A&#8594;Xs | Yg | s | g ; X&#8594;Zs | Yg | X_ | X. |  s | g | _ | . ; Y&#8594;Qg | Xs | Y_ | Y. |  s | g | _ | . ; Z&#8594; Yg |  Z_ | Z. | g | _ | . ; Q&#8594; Xs | Q_ | Q. | s |  _ | . } построить регулярное выражение на основе решения уравнения с  регулярными коэффициентами.<br />
11. Для грамматики ({A, B,C,D,E}, {. , _ , s,  z}, P, A), где правила имеют вид:<br />
<div class="imageTip"><img src="../images/clip_image002_0000.jpg" alt="3" width="250" height="117" hspace="12" /><br />Задание 12.</div>{A&#8594;B. ; B&#8594;Cs | Dz | z ; C&#8594;Cs | Az | Ez |  z ; D&#8594;Dz | Az | B_ | z ; E&#8594;B_} построить регулярное  выражение на основе решения уравнения с регулярными коэффициентами.<br />
12. Преобразовать автомат к детерминированному виду.</p>
  <p>&nbsp;</p>
  <div class="imageTip"><img src="../images/clip_image004_0000.jpg" alt="4" width="208" height="138" hspace="12" /><br />Задание 13.</div>
  <p>&nbsp;</p>
  <p>13. Преобразовать автомат к детерминированному виду. </p>
  <p>&nbsp;</p>
  <div class="imageTip"><img src="../images/clip_image006.jpg" alt="5" width="203" height="114" hspace="12" /><br />Задание 14.</div>
  <p>&nbsp;</p>
  <p>14. Преобразовать автомат к детерминированному виду.</p>
  <p>&nbsp;</p>
  <div class="imageTip"><img src="../images/clip_image008.jpg" alt="6" width="219" height="90" hspace="12" /><br />Задание 15.</div>
  <p>15. Объединить эквивалентные состояния в автомате. </p>
  <p>&nbsp;</p>
  <div class="imageTip"><img src="../images/clip_image010.jpg" alt="7" width="183" height="154" hspace="12" /><br />Задание 16.</div>
  <p>&nbsp;</p>
  <p>16. Объединить эквивалентные состояния в автомате.</p>
  <p>&nbsp;</p>
  <p>&nbsp;</p>
  <div class="imageTip"><img src="../images/clip_image012.jpg" alt="8" width="209" height="155" hspace="12" /><br />Задание 17.</div>
  <p>&nbsp;</p>
  <p>17. Объединить эквивалентные состояния в автомате.</p>
  <p>&nbsp;</p>
  <p>18. Для задачи №9 устраните левую рекурсию<br />
    19. Для задачи №10 устраните левую рекурсию<br />
    20. Для задачи №11 устраните левую рекурсию<br />
    21. Построить последовательность ситуаций и распознаватель  для LR(1)-грамматики: &nbsp;G({+, (, ), i},{S, E, F},{S&#8594;E; E&#8594;F+E; E&#8594;F; F&#8594;(E); F&#8594;i}, S)<br />
    22. Дана грамматика G ({a,b,c}, {A,B,C,D,E,F,G,S}, P, S). Правила  Р имеют вид:<br />
    {S&#8594;aAbB | E; A&#8594;BCa | a | l; B&#8594;ACb | b | l; C&#8594;A | B | bA | aB |  cC | aE | bE; D&#8594;c | Fb | Fa |  l; <br />
  &nbsp; E&#8594;Ea | Eb | Ec | ED | FG |  DG; F&#8594;BC | AC | DC | EC; G&#8594;Ga | Gb | Gc | GD}.  Преобразуйте ее к приведенному виду.<br />
    23. Дана грамматика G ({_, (, ),o,r,a,n,d,t,b},{S,T,E,F},P,S),  правила Р имеют вид: <br />
    {S&#8594;S_or_T  | T ; T&#8594;T_and_E | E ; E&#8594;not_E | F ; F&#8594;(S) | b}. Устраните цепные  правила и исключите левую рекурсию.<br />
    24. Дана грамматика G({(,),^,&amp;,~,a},{S,T,E,F},{S&#8594;S^T | T; T&#8594;T&amp;E | E; E&#8594;~E | F; F&#8594;(S) | a},S). Построить для нее распознаватель на основе LR(0)-грамматики и грамматики  операторного предшествования. Выполнить разбор цепочки a^a&amp;~a&amp;(a^~~a)<br />
    25. Вычислите выражения, записанные в форме обратной  польской записи: 1&nbsp; 2&nbsp; +&nbsp;  3&nbsp; *&nbsp; 5&nbsp;  +&nbsp; 4&nbsp; -&nbsp;&nbsp;  и&nbsp; <br />
    1&nbsp; 2&nbsp; *&nbsp;  3&nbsp; 5&nbsp; 4&nbsp;  *&nbsp; +&nbsp; +&nbsp; .  Запишите их в обычной форме.<br />
    26. Дана грамматика G ({(,),^,&amp;,~,a},  {S,T,E}, { S&#8594;S^T | T; T&#8594;T&amp;E | E; E&#8594;~E | (S) | a },  S). Построить схему  СУ-компиляции выражений входных цепочек языка в представление в виде обратной  польской записи.</p>

</body>
</html>
