<!-- (C) 2011-2012 V.Prytkov, V. Suponev, A.Uvarov. BSUIR -->
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//RU">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1251">
<META HTTP-EQUIV="Content-Language" CONTENT="ru">
<link rel="stylesheet" type="text/css" href="../css/style.css" />
<title>Лекция №13. Загрузка  ОС.</title>
<base target="_top">
</HEAD><BODY>
  <p align="center"><strong>Загрузка  ОС</strong></p>
  <p><em>Логическая  структура жесткого диска. Главная загрузочная запись. Таблица разделов. Первичные  и расширенные разделы. Таблица логических дисков. Системный загрузчик </em><em>Windows</em><em>. Варианты синтаксиса указания загрузочного раздела.  Загрузка </em><em>UNIX</em><em>. Разбиение на разделы по схеме GPT.  Динамические диски LDM. Жесткие и мягкие разделы. [1: 146-156; 2: 444-445,  776-778, 888-890; 7: 267-306, 659-674]</em></p>
  <p><img src="../images/1sem_theory_p12_clip_image002.gif" alt="1" width="490" height="92" hspace="12" align="right" /><strong>Логическая структура жесткого диска.</strong> Файловые системы позволяют хранить информацию на дисках.  Большинство дисков делятся на разделы, что позволяет на одном физическом диске  организовать несколько логических, на каждом из которых может находиться  независимая файловая система. Для UNIX систем  разделы не связаны с понятием логического диска, там ФС организована иначе. В любом  случае системе требуется информация об организации разделов на диске. Сектор 0  диска <strong>называется главной загрузочной  записью</strong> MBR master boot record и используется для загрузки компьютера. В  нем располагается небольшая программа для анализа структуры диска и загрузки  соответствующей ОС. Объем MBR &ndash; 512  байт. В конце MBR по смещению 0х1be  содержится таблица разделов из 4 элементов объемом 16 байт на элемент.  Структура элемента следующая:</p>
  <ul>
    <li>Флаг активности раздела &ndash; 1 байт (0 &ndash; не активен, 80h-активен)</li>
    <li>Номер головки начала раздела &ndash; 1 байт</li>
    <li>Номер сектора и цилиндра загрузочного сектора раздела - 2  байт</li>
    <li>Код-идентификатор операционной системы &ndash; 1 байт</li>
    <li>Номер головки конца раздела &ndash; 1 байт</li>
    <li>Номер сектора и цилиндра последнего сектора раздела - 2  байта</li>
    <li>Младшее и старее 2байтовые слова относительного номера начального  сектора &ndash; 4 байта</li>
    <li>Младшее и старее 2байтовые слова размера раздела в секторах  &ndash; 4 байта</li>
  </ul>
  <p>В таблице хранятся начальные и конечные  адреса (номера блоков) каждого раздела. Один из 4 разделов является активным.  При загрузке BIOS считывает и исполняет MBR-запись, код этой области определяет  активный раздел, считывает его первый блок, называемый загрузочным, и исполняет  его. Программа в загрузочном блоке (загрузочный сектор) загружает ОС данного  раздела. Каждый дисковый раздел начинается с загрузочного сектора, даже если в  нем не содержится ОС. Остальная структура раздела меняется в разных системах.  Там может содержаться: суперблок, хранящий ключевые параметры ФС и считываемый  при загрузке либо при первом обращении к ФС. Далее информация о свободных  блоках, информация об i-узлах, являющихся массивами структур данных по одной  структуре на каждый файл, далее корневой каталог и наконец прочие файлы и  каталоги. Наиболее употребительные коды ОС: </p>
  <table border="1" cellspacing="0" cellpadding="0">
    <tr>
      <td width="30" valign="top"><br />
        00h </td>
      <td width="142" valign="top"><p>Раздел не используется</p></td>
      <td width="28" valign="top"><p align="center">17h</p></td>
      <td width="132" valign="top"><p>Hidden NTFS,    HPFS</p></td>
      <td width="28" valign="top"><p align="center">82h</p></td>
      <td width="161" valign="top"><p>LinuxSwap,    Solaris</p></td>
      <td width="28" valign="top"><p align="center">A5h</p></td>
      <td width="170" valign="top"><p>Free BSD</p></td>
    </tr>
    <tr>
      <td width="30" valign="top"><p align="center">01h</p></td>
      <td width="142" valign="top"><p>FAT12</p></td>
      <td width="28" valign="top"><p align="center">1bh</p></td>
      <td width="132" valign="top"><p>Hidden FAT32</p></td>
      <td width="28" valign="top"><p align="center">83h</p></td>
      <td width="161" valign="top"><p>LinuxNative</p></td>
      <td width="28" valign="top"><p align="center">A6h</p></td>
      <td width="170" valign="top"><p>Open BSD</p></td>
    </tr>
    <tr>
      <td width="30" valign="top"><p align="center">02h</p></td>
      <td width="142" valign="top"><p>Xenix root</p></td>
      <td width="28" valign="top"><p align="center">1ch</p></td>
      <td width="132" valign="top"><p>Hidden FAT32    LBA</p></td>
      <td width="28" valign="top"><p align="center">84h</p></td>
      <td width="161" valign="top"><p>OS/2 C:    Hidden</p></td>
      <td width="28" valign="top"><p align="center">A9h</p></td>
      <td width="170" valign="top"><p>Net BSD</p></td>
    </tr>
    <tr>
      <td width="30" valign="top"><p align="center">03h</p></td>
      <td width="142" valign="top"><p>Xenix /usr</p></td>
      <td width="28" valign="top"><p align="center">1eh</p></td>
      <td width="132" valign="top"><p>Hidden FAT16    LBA</p></td>
      <td width="28" valign="top"><p align="center">85h</p></td>
      <td width="161" valign="top"><p>Linux    Extended</p></td>
      <td width="28" valign="top"><p align="center">abh</p></td>
      <td width="170" valign="top"><p>Apple booter</p></td>
    </tr>
    <tr>
      <td width="30" valign="top"><p align="center">04h</p></td>
      <td width="142" valign="top"><p>FAT16    (&lt;32Mb)</p></td>
      <td width="28" valign="top"><p align="center">35h</p></td>
      <td width="132" valign="top"><p>OS/2 JFS</p></td>
      <td width="28" valign="top"><p align="center">86h</p></td>
      <td width="161" valign="top"><p>FAT16 Volume    Set</p></td>
      <td width="28" valign="top"><p align="center">bbh</p></td>
      <td width="170" valign="top"><p>OS Selector</p></td>
    </tr>
    <tr>
      <td width="30" valign="top"><p align="center">05h</p></td>
      <td width="142" valign="top"><p>Extended</p></td>
      <td width="28" valign="top"><p align="center">3ch</p></td>
      <td width="132" valign="top"><p>Partition    Magic</p></td>
      <td width="28" valign="top"><p align="center">87h</p></td>
      <td width="161" valign="top"><p>NTFS Volume    Set</p></td>
      <td width="28" valign="top"><p align="center">beh</p></td>
      <td width="170" valign="top"><p>Solaris 8    boot</p></td>
    </tr>
    <tr>
      <td width="30" valign="top"><p align="center">06h</p></td>
      <td width="142" valign="top"><p>FAT16</p></td>
      <td width="28" valign="top"><p align="center">42h</p></td>
      <td width="132" valign="top"><p>LinuxSwp</p></td>
      <td width="28" valign="top"><p align="center">8bh</p></td>
      <td width="161" valign="top"><p>FAT32 Volume    Set</p></td>
      <td width="28" valign="top"><p align="center">C2h</p></td>
      <td width="170" valign="top"><p>Hidden Linux    Swap</p></td>
    </tr>
    <tr>
      <td width="30" valign="top"><p align="center">07h</p></td>
      <td width="142" valign="top"><p>NTFS, HPFS</p></td>
      <td width="28" valign="top"><p align="center">43h</p></td>
      <td width="132" valign="top"><p>LinuxNat</p></td>
      <td width="28" valign="top"><p align="center">8ch</p></td>
      <td width="161" valign="top"><p>FAT32 LBA    Volume Set</p></td>
      <td width="28" valign="top"><p align="center">C3h</p></td>
      <td width="170" valign="top"><p>Hidden Linux    Native</p></td>
    </tr>
    <tr>
      <td width="30" valign="top"><p align="center">0ah</p></td>
      <td width="142" valign="top"><p>OS/2 Boot    Manager</p></td>
      <td width="28" valign="top"><p align="center">4dh</p></td>
      <td width="132" valign="top"><p>QNX 4.x first</p></td>
      <td width="28" valign="top"><p align="center">8dh</p></td>
      <td width="161" valign="top"><p>Free Fdisk    FAT12</p></td>
      <td width="28" valign="top"><p align="center">D1h</p></td>
      <td width="170" valign="top"><p>Multiuser DOS    FAT12</p></td>
    </tr>
    <tr>
      <td width="30" valign="top"><p align="center">0bh</p></td>
      <td width="142" valign="top"><p>FAT32</p></td>
      <td width="28" valign="top"><p align="center">4eh</p></td>
      <td width="132" valign="top"><p>QNX 4.x    second</p></td>
      <td width="28" valign="top"><p align="center">90h</p></td>
      <td width="161" valign="top"><p>Free Fdisk    FAT16 (&lt;32Mb) </p></td>
      <td width="28" valign="top"><p align="center">D4h</p></td>
      <td width="170" valign="top"><p>Multiuser DOS FAT16(&lt;32Mb) </p></td>
    </tr>
    <tr>
      <td width="30" valign="top"><p align="center">0ch</p></td>
      <td width="142" valign="top"><p>FAT32 LBA</p></td>
      <td width="28" valign="top"><p align="center">4fh</p></td>
      <td width="132" valign="top"><p>QNX 4.x    third, Oberon</p></td>
      <td width="28" valign="top"><p align="center">91h</p></td>
      <td width="161" valign="top"><p>Free Fdisk    Extended </p></td>
      <td width="28" valign="top"><p align="center">D5h</p></td>
      <td width="170" valign="top"><p>Multiuser DOS    Extended </p></td>
    </tr>
    <tr>
      <td width="30" valign="top"><p align="center">0eh</p></td>
      <td width="142" valign="top"><p>FAT16 LBA</p></td>
      <td width="28" valign="top"><p align="center">52h</p></td>
      <td width="132" valign="top"><p>CP/M</p></td>
      <td width="28" valign="top"><p align="center">92h</p></td>
      <td width="161" valign="top"><p>Free Fdisk    FAT16 </p></td>
      <td width="28" valign="top"><p align="center">D6h</p></td>
      <td width="170" valign="top"><p>Multiuser DOS    FAT16 </p></td>
    </tr>
    <tr>
      <td width="30" valign="top"><p align="center">0fh</p></td>
      <td width="142" valign="top"><p>Extended LBA</p></td>
      <td width="28" valign="top"><p align="center">63h</p></td>
      <td width="132" valign="top"><p>UNIX</p></td>
      <td width="28" valign="top"><p align="center">97h</p></td>
      <td width="161" valign="top"><p>Free Fdisk    FAT32 </p></td>
      <td width="28" valign="top"><p align="center">D8h</p></td>
      <td width="170" valign="top"><p>CP/M &ndash; 86</p></td>
    </tr>
    <tr>
      <td width="30" valign="top"><p align="center">11h</p></td>
      <td width="142" valign="top"><p>Hidden FAT12</p></td>
      <td width="28" valign="top"><p align="center">64h</p></td>
      <td width="132" valign="top"><p>NetWare 2.x</p></td>
      <td width="28" valign="top"><p align="center">98h</p></td>
      <td width="161" valign="top"><p>Free Fdisk    FAT32 LBA </p></td>
      <td width="28" valign="top"><p align="center">ebh</p></td>
      <td width="170" valign="top"><p>BeOS</p></td>
    </tr>
    <tr>
      <td width="30" valign="top"><p align="center">14h</p></td>
      <td width="142" valign="top"><p>Hidden FAT16    (&lt;32Mb)</p></td>
      <td width="28" valign="top"><p align="center">65h</p></td>
      <td width="132" valign="top"><p>NetWare 3.x</p></td>
      <td width="28" valign="top"><p align="center">9ah</p></td>
      <td width="161" valign="top"><p>Free Fdisk    FAT16 LBA </p></td>
      <td width="28" valign="top"><p align="center">F2h</p></td>
      <td width="170" valign="top"><p>DOS Secondary</p></td>
    </tr>
    <tr>
      <td width="30" valign="top"><p align="center">16h</p></td>
      <td width="142" valign="top"><p>Hidden FAT16</p></td>
      <td width="28" valign="top"><p align="center">70h</p></td>
      <td width="132" valign="top"><p>DiskSecure    Multi-boot</p></td>
      <td width="28" valign="top"><p align="center">9bh</p></td>
      <td width="161" valign="top"><p>Free Fdisk    Extended LBA </p></td>
      <td width="28" valign="top"><p align="center">fdh</p></td>
      <td width="170" valign="top"><p>Linux RAID</p></td>
    </tr>
  </table>
  <p><img src="../images/1sem_theory_p12_clip_image004.gif" alt="2" width="309" height="208" hspace="12" align="right" /> <br />
    Последние 2 байта MBR  имеют значение 55aah, т.е. чередующуюся последовательность 0 и 1, что позволяет  проверить работоспособность линий передачи данных. Это же значение имеется в 2  последних байтах во всех загрузочных секторах. Разделы делятся на <strong>первичные</strong> (primary) и <strong>расширенные</strong> (extended). Первичных разделов не может более 4. Только один из них  может быть активным. Если система поддерживает спецификации DOS, остальные первичные разделы считаются невидимыми (hidden). Расширенный раздел дополнительно также разбивается на  подразделы &ndash; <strong>логические диски,</strong> хотя  в общем случае любой логический диск может в свою очередь являться расширенным  разделом. Расширенный раздел содержит вторичную загрузочную запись, которая содержит  таблицу логических дисков (LDT), по  структуре аналогичных MBR. </p>
  <p><strong>Загрузка  ОС</strong> происходит следующим образом. При  включении компьютера управление получает BIOS,  располагающаяся в ПЗУ по верхним адресам. Соответствующие процедуры проводят  тестирование и вызывают процедуру начальной загрузки. Она определяет первое  готовое устройство из списка разрешенных и доступных в соответствии с информацией  BIOS. Таким устройством может быть гибкий или жесткий диск,  компакт-диск, ZIP-привод, сетевой адаптер и т.д. С этого устройства в  оперативную память загружается короткая главная программа-загрузчик. Для  жесткого диска это внесистемный загрузчик из MBR.  Далее этому загрузчику передается управление. Загрузчик определяет активный  раздел на диске, загружает системный загрузчик (первый сектор) активного  раздела и передает ему управление. Системный загрузчик находит и загружает  необходимые файлы ОС и передает ей управление. Далее система загружает  необходимые сервисы, расширяет или заменяет некоторые обработчики BIOS. В современных мультизадачных ОС большинство сервисов BIOS, изначально расположенных в ПЗУ, заменяются собственными  драйверами ОС. </p>
  <p>Существуют менеджеры загрузки, позволяющие пользователю  выбрать для загрузки одну из установленных на ПК ОС. Один из наиболее известных  мультизагрузчиков &ndash; BootMagic,  фирмы PowerQuest. Как правило такие программы:</p>
  <ul>
    <li>поддерживают большое число ОС;</li>
    <li>устанавливаются на любой раздел, в т.ч.  и недоступный другим ОС;</li>
    <li>позволяют загрузиться с дискеты  независимо от установок BIOS;</li>
    <li>автоматически идентифицируют ОС как на  первичных разделах так и на логических дисках расширенного раздела всех жестких  дисков, доступных в BIOS;</li>
    <li>поддерживают несколько ОС на одном  разделе FAT16/32, предотвращая конфликты по системным и  конфигурационным файлам;</li>
    <li>дополнительная настройка конфигураций  ОС;</li>
    <li>восстановление при повреждении MBR;</li>
    <li>поддержка больших жестких дисков во  всех режимах;</li>
    <li>парольная защита на меню загрузки и  выбранные конфигурации.</li>
  </ul>
  <p>Формирование таблицы разделов осуществляется специальными  утилитами, простейшие из них &ndash; fdisk  от Microsoft. Один из наиболее известных разбивщиков &ndash; PartitionMagic фирмы PowerQuest.  Такие программы как правило позволяют:</p>
  <ul>
    <li>создавать разделы любых типов и  форматировать их под разные ФС;</li>
    <li>получать подробную информацию о  разделах и дисках;</li>
    <li>удалять разделы;</li>
    <li>преобразовывать разделы одной ФС в  другую;</li>
    <li>копировать и перемещать данные с одного  раздела на другой;</li>
    <li>изменять размеры раздела;</li>
    <li>выбирать размер кластера для операции;</li>
    <li>редактировать содержимое жесткого диска  посекторно.</li>
  </ul>
  <p>Системные утилиты форматирования диска в MS-DOS  и Win  9x создают один первичный раздел и один расширенный, в котором  организуют один или несколько логических дисков. Помимо буквенного обозначения  С:\ и т.д. диски получают еще и так называемый номер раздела. С имеет номер 1, D &ndash; 2 и т.д. В Win  NT/2000/XP  системный загрузчик считывает корневой каталог своего диска, находит в нем файл  ntldr, загружает его и передает ему управление. Он уже загружает  непосредственно ОС. Существует несколько версий загрузочного сектора в  зависимости от формата раздела. Ntldr позволяет выбирать из установленных ОС. В  файле boot.ini указывается, где находятся файлы выбранной ОС, используя номера  дисков и каталог. Этот же файл отвечает и за ряд других параметров ОС (кол-во  ЦП, объем ОЗУ, объем виртуальной памяти пользовательского процесса 2 или 3 Гб,  частота часов реального времени). Это единственный файл с системной информацией,  не содержащейся в реестре. Пример boot.ini:<br />
    <br /><code>[boot loader]<br />
    timeout=30<br />
    default=multi(0)disk(0)rdisk(0)partition(1)\WINDOWS<br />
    [operation  systems]<br />
    multi(0)disk(0)rdisk(0)partition(1)\WINDOWS=&rdquo;Microsoft  Windows XP Professional&rdquo;&nbsp; /fastdetect<br />
    C:\=&rdquo;Microsoft  Windows&rdquo;<br />
    </code><br />1 секция описывает ОС, загружаемую по умолчанию, 2 &ndash;  перечень доступных ОС. Возможны 3 варианта синтаксиса. 1 вариант (multi)  указывает, что требуется загружать системные файлы через функцию прерывания Int  13h. Т.о. используется, когда у диска на котором находится загрузочный раздел,  есть контроллер с поддержкой прерывания Int  13h. Синтаксис имеет формат : multi(W)disk(X)rdisk(Y)partition(Z). Здесь W- номер  дискового контроллера, обычно 0, X &ndash; в этом  синтаксисе всегда 0, Y &ndash; физический  жесткий диск, подключенный к контроллеру (0-3 для ATA  контроллера, 1-15 для SCSI), Z &ndash; номер загрузочного раздела на физическом диске, начиная с  1. Второй вариант (SCSI) сообщает,  что для доступа к загрузочным файлам надо задействовать сервисы дискового в/в,  предоставляемые Ntbootdd.sys. Синтаксис: scsi(W)disk(X)rdisk(Y)partition(Z). W &ndash; номер  контроллера, Х &ndash; физический жесткий диск, подключенный к этому контроллеру  (обычно 0-15), Y &ndash; logical unit number (LUN) диска, содержащего загрузочный раздел, обычно 0, Z &ndash; номер загрузочного раздела, начиная с 1. Третий (signature) указывает, что необходимо найти диск с соответствующей  сигнатурой, независимо от номера контроллера и использовать ntbootdd.sys  для доступа к загрузочному разделу.  Сигнатура &ndash; это глобально уникальный идентификатор GUID,  извлекаемый из MBR  в процессе установки и записываемый на  диск. Синтаксис: signature(V)disk(X)rdisk(Y)partition(Z). V &ndash;32 разрядная  сигнатура диска, X-  физический жесткий диск со специфической сигнатурой, Y всегда 0, Z-  номер загрузочного раздела. Этот вариант используется, если размер загрузочного  раздела больше 7,8 Гб, а функции BIOS  Int13h  не могут обратиться ко всему разделу,  либо если BIOS не  поддерживает расширенное Int 13h.<br />
    Ntldr начинает работу в реальном режиме x86, т.е. трансляция виртуальных адресов отсутствует, и  адреса интерпретируются как физические. Доступен лишь первый Мб физической  памяти. Ntldr переключает систему в защищенный режим (пока без трансляции  виртуальных адресов, но доступна уже вся память), создает таблицу страниц,  включает поддержку подкачки, далее работая в полнофункциональном режиме. Далее  анализирует boot.ini, и если  запись выбранной ОС ссылается на ранее установленную ОС (MS DOS,  Windows Me,  Windows 9x), читается  в память bootsect.dos, переключается  обратно в реальный режим и вызывает из bootsect.dos  код MBR,  специфичный для данной ОС. Если же продолжается загрузка XP/Server  2003/2000, то запускает ntdetect.com для  получения базовых сведений о конфигурации из BIOS,  загружает hal.dll, ntoskrnl.exe, и видеодрайвер по умолчанию bootvid.dll. Далее  считывается реестр, чтобы найти остальные необходимые драйверы, вносит в список  драйверов драйвер ФС, отвечающий за реализацию кода для того типа раздела, на  котором установлена ОС, загружает его, далее загружает остальные драйверы и  управление передается ntoskrnl.exe. Выполняется ряд инициализаций, последним этапом загрузки  создается первый пользовательский процесс, сеансовый менеджер smss.exe. Выполнив  свою часть работы, он создает демон регистрации winlogon.exe. В этот  момент ОС загружена и работает. Далее создается родительский процесс всех  служебных процессов, services.exe, который создает все системные службы, запуская служебные  процессы в пространстве пользователя, и загружает оставшиеся незагруженными  драйверы устройств. Winlogon  получает из реестра профиль пользователя и запускает оболочку, обычно explorer.exe  с рядом настроенных параметров. Отредактировав  реестр, можно заставить загружать другую оболочку.</p>
  <p>. В Linux диски  нумеруются иначе. Жесткий диск, подключенный к первому контроллеру IDE как master,  именуется hda. Второй диск на этом же кабеле получит имя hdb. Master  на втором порте контроллера будет hdc И  т.д. Если раздел описан в MBR, то он  имеет номер элемента таблицы разделов. Диски, созданные в расширенном разделе  нумеруются начиная с 5. Разные версии загружаются по-разному, однако в общем  действия выполняются следующие. Загрузочный сектор загружает автономную  программу boot и  передает ей управление. Она копирует себя в фиксированный адрес памяти в  старших адресах, далее считывает корневой каталог, потом ядро ОС и передает ему  управление.&nbsp; Ядро написано на ассемблере  и является в значительной степени машинно-зависимым. Ядро устанавливает  указатель стека, определяет тип ЦП, вычисляет объем ОЗУ, разрешает работу  диспетчера памяти и запускает процедуру main,  для запуска основной части ОС. Выполняется существенная инициализация, в т.ч.  выделяется память под буфер сообщений,&nbsp;  структуры данных ядра,&nbsp; и т.д.,  считываются файлы конфигурации, где описаны типы устройств, проверяется их  наличие, формируя таблицу подключенных устройств. Далее загружаются драйверы  устройств. Затем запускается процесс 0 , который программирует таймер реального  времени, монтирует корневую файловую систему и создает процесс 1 (init) и процесс 2 страничного демона. Init запускает ОС в зависимости от флагов,  выполняет ряд дополнительных действий, считывает файл etc/ttys, перечисляющий терминалы и их свойства. Для разрешенных  терминалов создает копию самого себя, которая исполняет программу getty, которая читает имя пользователя и вызывает bin/login, которая  запрашивает пароль и выполняет проверку, после чего запускает вместо себя  оболочку пользователя. </p>
  <p><img src="../images/1sem_theory_p12_clip_image005.gif" alt="3" width="630" height="122" hspace="12" align="right" />По  новой спецификации EFI (Extensible Firmware Interface)  от Intel определяется  среда операционной мини-системы, реализуемой в виде микрокода, как правило,  зашитого в ПЗУ. Эта среда используется ОС на ранних этапах загрузки и для диагностики.  Первая платформа, поддерживающая EFI, это Intel IA64.  Соответствующие версии Windows  используют EFI,  но могут работать и по схеме MBR. EFI определяет  схему разбивки на разделы &ndash; таблицу разделов GUID  (GUID Partition Table - <strong>GPT</strong>).  Адреса секторов стали 64 разрядными, используются контрольные суммы CRC для  поддержания целостности таблицы разделов и резервное копирование таблицы  разделов, каждому разделу, помимо имени, назначается свой GUID. Первый сектор по-прежнему содержит MBR, чтобы защитить диск от ОС, не поддерживающих GPT. Во 2 и последнем секторах хранятся заголовки таблицы  разделов, а сразу после 2 сектора и перед последним располагается сама таблица.  При такой структуре отпадает необходимость в расширенных разделах. Элемент  таблицы описывает начало и конец соответствующего раздела. Оба способа &ndash; и MBR и  GPT определяют разделы на <strong>базовых</strong> дисках. </p>
  <p>Вместе с тем в Windows  2000 появилась поддержка <strong>динамических</strong> разделов (LDM &ndash; Logic  Disk Manager). Основное отличие в том, что LDM поддерживает одну унифицированную базу  данных, где хранится информация о разделах на всех динамических дисках системы.  Чтобы загрузчик мог найти системный и загрузочный разделы и каталоги, они  описываются в стиле MBR  или GPT,  оставшаяся часть диска (или весь диск, если он не содержит загрузочного кода),  помечается как раздел типа LDM. Соответственно  разделы в стиле MBR или GPT называются <strong>жесткими</strong>,  а LDM разделы <strong>мягкими</strong>. БД LDM-раздела размещается в зарезервированном пространстве  размером 1 Мб в конце этого раздела. Она состоит из 4 областей: сектора  заголовка (private header),  таблицы оглавления, собственно БД, состоящей из заголовка и самих записей, и  журнала транзакций, после которого следует зеркальная копия Private Header.  Каждому динамическому диску LDM  назначает свой GUID.  Таблица оглавления занимает 16 секторов и содержит информацию о структуре БД.  Длина каждой записи БД &ndash; 128 байт. Элементы БД могут быть 4 типов: раздел partition, компонент component,  том volume, диск disk. На  нижнем уровне находятся элементы раздела, описывающие разделы в классическом  понимании, идентификаторы, хранящиеся в элементе раздела, связывают его с  элементами компонентов и дисков. Элемент компонента связывает один или  несколько элементов разделов и элемент тома, с которым данные разделы  сопоставлены. Элемент тома хранит его GUID,  суммарный размер, состояние и присвоенную ему букву диска. Элемент диска представляет  динамический диск в составе группы и включает его GUID.  Такая структура позволяет произвольный набор разделов объединять в один том  (доступ в файловой системе по одной букве), даже если они находятся на разных  дисках, а также поддерживать RAID массивы.</p>

</BODY>
</HTML>